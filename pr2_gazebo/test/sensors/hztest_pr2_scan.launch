<launch>
  <arg name="gui" default="false" />
  <arg name="headless" default="true"/>

  <env name="DISPLAY" value="" unless="$(arg gui)" /> <!-- set DISPLAY="" closes  Assertion `bAttached && "A new DepthBuffer for a RenderTarget was created, but after creation" "it says it's incompatible with that RT"' error -->

  <!-- Bring up the node we want to test. -->
  <include file="$(find pr2_gazebo)/launch/pr2_empty_world.launch" >
    <arg name="gui" value="$(arg gui)" />
    <arg name="headless" default="$(arg headless)"/>
    <arg name="world_name" value="$(find pr2_gazebo)/test/Media/worlds/empty.world" /> <!-- set empty.world for test, which does not require downloading models -->
  </include>

  <!-- Run hztest -->
  <!-- Test for publication of 'base_scan' topic -->
  <test test-name="hztest_test_scan" pkg="rostest" type="hztest" time-limit="500" name="base_scan_test">
    <!-- The topic to listen for -->
    <param name="topic" value="/base_scan" />
    <!-- The expected publication rate [Hz].  Set to 0.0 to only check that
    at least one message is received. -->
    <param name="hz" value="25.0" />
    <!-- Acceptable error in the publication rate [Hz].  Ignored if hz is set
    to 0.0. -->
    <param name="hzerror" value="20.0" />
    <!-- Time to listen for [seconds] -->
    <param name="test_duration" value="10.0" />    
    <!-- Whether each inter-message time interval should be checked against
    the expected publication rate and error bound [boolean].  If true, then
    the test will fail if the time elapsed between *any* two consecutive
    messages exceeded the specified limits.  If false, then we only check
    the average publication rate over the entire test.  Default: false. -->
    <param name="check_intervals" value="false" />    
  </test>

  <!-- Test for publication of 'tilt_scan' topic. -->
  <test test-name="hztest_test_tilt_scan" pkg="rostest" type="hztest" time-limit="500" name="tilt_scan_test">
    <!-- Note how we use a different parameter namespace and node name
    for this test (tilt_scan_test vs. scan_test). -->
    <param name="topic" value="/tilt_scan" />
    <param name="hz" value="25.0" />
    <param name="hzerror" value="20.0" />
    <param name="test_duration" value="10.0" />
    <param name="check_intervals" value="false" />
  </test>

</launch>
